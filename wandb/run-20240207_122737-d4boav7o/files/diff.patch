diff --git a/leel2.png b/leel2.png
deleted file mode 100644
index d982f60..0000000
Binary files a/leel2.png and /dev/null differ
diff --git a/leel4.png b/leel4.png
deleted file mode 100644
index c4edaf7..0000000
Binary files a/leel4.png and /dev/null differ
diff --git a/rllte/agent/legacy/ppo.py b/rllte/agent/legacy/ppo.py
index d87c0db..78f900d 100644
--- a/rllte/agent/legacy/ppo.py
+++ b/rllte/agent/legacy/ppo.py
@@ -204,6 +204,6 @@ class PPO(OnPolicyAgent):
                 total_entropy_loss.append(entropy.item())
 
         # record metrics
-        self.logger.record("train/policy_loss", np.mean(total_policy_loss))
-        self.logger.record("train/value_loss", np.mean(total_value_loss))
-        self.logger.record("train/entropy_loss", np.mean(total_entropy_loss))
+        self.logger.record("policy_loss", np.mean(total_policy_loss))
+        self.logger.record("value_loss", np.mean(total_value_loss))
+        self.logger.record("entropy_loss", np.mean(total_entropy_loss))
diff --git a/rllte/common/logger.py b/rllte/common/logger.py
index b442957..333343d 100644
--- a/rllte/common/logger.py
+++ b/rllte/common/logger.py
@@ -72,8 +72,10 @@ class Logger:
 
         self._train_file = self._log_dir / "train.log"
         self._eval_file = self._log_dir / "eval.log"
+        self._loss_file = self._log_dir / "losses.log"
         self._train_file_write_header = True
         self._eval_file_write_header = True
+        self._loss_file_write_header = True
 
         self.metrics: Dict[str, Any] = {}
 
@@ -226,3 +228,15 @@ class Logger:
 
         csv_writer.writerow(data)
         csv_file.flush()
+        
+    def loss(self, msg: Dict) -> None:
+        """Output msg with 'loss' level.
+
+        Args:
+            msg (Dict): Message to be printed.
+
+        Returns:
+            None.
+        """
+        self._dump_to_csv(self._loss_file, msg, self._loss_file_write_header)
+        self._loss_file_write_header = False
diff --git a/rllte/common/prototype/base_agent.py b/rllte/common/prototype/base_agent.py
index abc05d5..4d49e29 100644
--- a/rllte/common/prototype/base_agent.py
+++ b/rllte/common/prototype/base_agent.py
@@ -194,7 +194,10 @@ class BaseAgent(ABC):
             self.logger.info(f"{'Pre-training Mode'.ljust(NUMBER_OF_SPACES)} : On")
         # sep line
         self.logger.debug("=" * 80)
-
+        
+        if self.irs is not None:
+            self.irs.logger = self.logger
+            
     def set(
         self,
         encoder: Optional[Encoder] = None,
diff --git a/rllte/common/prototype/base_reward.py b/rllte/common/prototype/base_reward.py
index 19d510a..c1b34f6 100644
--- a/rllte/common/prototype/base_reward.py
+++ b/rllte/common/prototype/base_reward.py
@@ -87,6 +87,9 @@ class BaseReward(ABC):
         # build the reward forward filter
         self.rff = RewardForwardFilter(gamma) if gamma is not None else None
         
+        # build logger
+        self.logger = None
+        
     @property
     def weight(self) -> float:
         """Get the weighting coefficient of the intrinsic rewards.
diff --git a/rllte/common/prototype/on_policy_agent.py b/rllte/common/prototype/on_policy_agent.py
index 9a213c3..d8e1ba1 100644
--- a/rllte/common/prototype/on_policy_agent.py
+++ b/rllte/common/prototype/on_policy_agent.py
@@ -202,6 +202,7 @@ class OnPolicyAgent(BaseAgent):
                     "total_time": total_time,
                 }
                 self.logger.train(msg=train_metrics)
+                self.logger.loss(msg=self.logger.metrics)
 
             # save model
             if update % save_interval == 0:
diff --git a/rllte/env/mario/__init__.py b/rllte/env/mario/__init__.py
index cc773f8..c979f1c 100644
--- a/rllte/env/mario/__init__.py
+++ b/rllte/env/mario/__init__.py
@@ -26,13 +26,16 @@ def make_mario_env(
 
     def make_env(env_id: str, seed: int) -> Callable:
         def _thunk():
-            env = gym_old.make(env_id, apply_api_compatibility=True, render_mode="rgb_array", max_episode_steps=500)
+            env = gym_old.make(env_id, apply_api_compatibility=True, render_mode="rgb_array")
             env = JoypadSpace(env, SIMPLE_MOVEMENT)
             env = Gym2Gymnasium(env)
             env = SkipFrame(env, skip=4)
             env = gym.wrappers.ResizeObservation(env, (84, 84))
+            # env = gym.wrappers.GrayScaleObservation(env)
+            # env = gym.wrappers.FrameStack(env, num_stack=4)
             env = ImageTranspose(env)
             env = EpisodicLifeEnv(env)
+            env = gym.wrappers.TransformReward(env, lambda r: 0.01*r)
             env.observation_space.seed(seed)
             return env
         return _thunk
diff --git a/rllte/xplore/reward/disagreement.py b/rllte/xplore/reward/disagreement.py
index 158f2c7..11f8078 100644
--- a/rllte/xplore/reward/disagreement.py
+++ b/rllte/xplore/reward/disagreement.py
@@ -25,7 +25,7 @@
 
 
 from typing import Dict, Optional
-
+import numpy as np
 import gymnasium as gym
 import torch as th
 import torch.nn.functional as F
@@ -189,6 +189,8 @@ class Disagreement(BaseReward):
         # build the dataset and dataloader
         dataset = TensorDataset(obs_tensor, actions_tensor, next_obs_tensor)
         loader = DataLoader(dataset=dataset, batch_size=self.batch_size, shuffle=True)
+        
+        avg_loss = []
         # update the ensemble of forward dynamics models
         for _idx, batch_data in enumerate(loader):
             ensemble_idx = _idx % self.ensemble_size
@@ -214,4 +216,8 @@ class Disagreement(BaseReward):
             )
             # backward and update
             fm_loss.backward()
-            self.opt[ensemble_idx].step()
\ No newline at end of file
+            self.opt[ensemble_idx].step()
+            
+            avg_loss.append(fm_loss.item())
+            
+        self.logger.record("avg_loss", np.mean(avg_loss))
\ No newline at end of file
diff --git a/rllte/xplore/reward/e3b.py b/rllte/xplore/reward/e3b.py
index a9fec67..b8f042d 100644
--- a/rllte/xplore/reward/e3b.py
+++ b/rllte/xplore/reward/e3b.py
@@ -25,7 +25,7 @@
 
 
 from typing import Dict, Optional
-
+import numpy as np
 import gymnasium as gym
 import torch as th
 from torch import nn
@@ -196,7 +196,7 @@ class E3B(BaseReward):
         # build the dataset and loader
         dataset = TensorDataset(obs_tensor, actions_tensor, next_obs_tensor)
         loader = DataLoader(dataset=dataset, batch_size=self.batch_size, shuffle=True)
-
+        avg_im_loss = []
         # update the encoder and inverse dynamics model
         for _idx, batch_data in enumerate(loader):
             # get the batch data
@@ -222,4 +222,8 @@ class E3B(BaseReward):
             # backward and update
             im_loss.backward()
             self.encoder_opt.step()
-            self.im_opt.step()
\ No newline at end of file
+            self.im_opt.step()
+            
+            avg_im_loss.append(im_loss.item())
+
+        self.logger.record("avg_im_loss", np.mean(avg_im_loss))
\ No newline at end of file
diff --git a/rllte/xplore/reward/icm.py b/rllte/xplore/reward/icm.py
index b630366..687308a 100644
--- a/rllte/xplore/reward/icm.py
+++ b/rllte/xplore/reward/icm.py
@@ -25,7 +25,7 @@
 
 
 from typing import Dict, Optional
-
+import numpy as np
 import gymnasium as gym
 import torch as th
 from torch import nn
@@ -188,6 +188,9 @@ class ICM(BaseReward):
         # build the dataset and dataloader
         dataset = TensorDataset(obs_tensor, actions_tensor, next_obs_tensor)
         loader = DataLoader(dataset=dataset, batch_size=self.batch_size, shuffle=True)
+        
+        avg_im_loss = []
+        avg_fm_loss = []
         # update the encoder, inverse dynamics model and forward dynamics model
         for _idx, batch_data in enumerate(loader):
             # get the batch data
@@ -220,4 +223,9 @@ class ICM(BaseReward):
             (im_loss + fm_loss).backward()
             self.encoder_opt.step()
             self.im_opt.step()
-            self.fm_opt.step()
\ No newline at end of file
+            self.fm_opt.step()
+            avg_im_loss.append(im_loss.item())
+            avg_fm_loss.append(fm_loss.item())
+            
+        self.logger.record("im_loss", np.mean(avg_im_loss))
+        self.logger.record("fm_loss", np.mean(avg_fm_loss))
\ No newline at end of file
diff --git a/rllte/xplore/reward/model.py b/rllte/xplore/reward/model.py
index 4d9f81c..b142700 100644
--- a/rllte/xplore/reward/model.py
+++ b/rllte/xplore/reward/model.py
@@ -22,13 +22,18 @@
 # SOFTWARE.
 # =============================================================================
 
-
+import numpy as np
 from typing import Tuple
 from torch import nn
 from torch.nn import functional as F
 from rllte.xploit.encoder import IdentityEncoder, MnihCnnEncoder, PathakCnnEncoder
 import torch as th
 
+def layer_init(layer, std=np.sqrt(2), bias_const=0.0):
+    th.nn.init.orthogonal_(layer.weight, std)
+    th.nn.init.constant_(layer.bias, bias_const)
+    return layer
+
 class ObservationEncoder(nn.Module):
     """Encoder for encoding observations.
 
@@ -46,11 +51,11 @@ class ObservationEncoder(nn.Module):
         # visual
         if encoder_model == "mnih" and len(obs_shape) > 2:
             self.trunk = nn.Sequential(
-                nn.Conv2d(obs_shape[0], 32, 8, stride=4),
+                layer_init(nn.Conv2d(obs_shape[0], 32, 8, stride=4)),
                 nn.ReLU(),
-                nn.Conv2d(32, 64, 4, stride=2),
+                layer_init(nn.Conv2d(32, 64, 4, stride=2)),
                 nn.ReLU(),
-                nn.Conv2d(64, 64, 3, stride=1),
+                layer_init(nn.Conv2d(64, 64, 3, stride=1)),
                 nn.ReLU(),
                 nn.Flatten(),
             )
@@ -59,17 +64,17 @@ class ObservationEncoder(nn.Module):
                 sample = th.ones(size=tuple(obs_shape)).float()
                 n_flatten = self.trunk(sample.unsqueeze(0)).shape[1]
 
-            self.trunk.append(nn.Linear(n_flatten, latent_dim))
+            self.trunk.append(layer_init(nn.Linear(n_flatten, latent_dim)))
             self.trunk.append(nn.ReLU())
         elif encoder_model == "espeholt" and len(obs_shape) > 2:
             self.trunk = nn.Sequential(
-                nn.Conv2d(obs_shape[0], 32, kernel_size=3, stride=2, padding=1),
+                layer_init(nn.Conv2d(obs_shape[0], 32, kernel_size=3, stride=2, padding=1)),
                 nn.ELU(),
-                nn.Conv2d(32, 32, kernel_size=3, stride=2, padding=1),
+                layer_init(nn.Conv2d(32, 32, kernel_size=3, stride=2, padding=1)),
                 nn.ELU(),
-                nn.Conv2d(32, 32, kernel_size=3, stride=2, padding=1),
+                layer_init(nn.Conv2d(32, 32, kernel_size=3, stride=2, padding=1)),
                 nn.ELU(),
-                nn.Conv2d(32, 32, kernel_size=3, stride=2, padding=1),
+                layer_init(nn.Conv2d(32, 32, kernel_size=3, stride=2, padding=1)),
                 nn.ELU(),
                 nn.Flatten(),
             )
@@ -77,12 +82,14 @@ class ObservationEncoder(nn.Module):
                 sample = th.ones(size=tuple(obs_shape)).float()
                 n_flatten = self.trunk(sample.unsqueeze(0)).shape[1]
 
-            self.trunk.append(nn.Linear(n_flatten, latent_dim))
+            self.trunk.append(layer_init(nn.Linear(n_flatten, latent_dim)))
             self.trunk.append(nn.ReLU())
         else:
-            self.trunk = nn.Sequential(nn.Linear(obs_shape[0], 256), 
-                                       nn.ReLU())
-            self.trunk.append(nn.Linear(256, latent_dim))
+            self.trunk = nn.Sequential(
+                layer_init(nn.Linear(obs_shape[0], 256)), 
+                nn.ReLU()
+            )
+            self.trunk.append(layer_init(nn.Linear(256, latent_dim)))
 
     def forward(self, obs: th.Tensor) -> th.Tensor:
         """Encode the input tensors.
diff --git a/rllte/xplore/reward/pseudo_counts.py b/rllte/xplore/reward/pseudo_counts.py
index 0fbfe35..0203ebe 100644
--- a/rllte/xplore/reward/pseudo_counts.py
+++ b/rllte/xplore/reward/pseudo_counts.py
@@ -27,10 +27,9 @@ from typing import Dict, List, Optional
 from torch import nn
 from torch.nn import functional as F
 from torch.utils.data import DataLoader, TensorDataset
-
+import numpy as np
 import gymnasium as gym
 import torch as th
-
 from rllte.common.prototype import BaseReward
 from .model import InverseDynamicsEncoder
 
@@ -231,6 +230,8 @@ class PseudoCounts(BaseReward):
         # build the dataset and loader
         dataset = TensorDataset(obs_tensor, actions_tensor, next_obs_tensor)
         loader = DataLoader(dataset=dataset, batch_size=self.batch_size, shuffle=True)
+        
+        avg_loss = []
         # update the encoder
         for _idx, batch in enumerate(loader):
             # get the batch data
@@ -250,4 +251,8 @@ class PseudoCounts(BaseReward):
             )
             # backward and update
             im_loss.backward()
-            self.opt.step()
\ No newline at end of file
+            self.opt.step()
+            
+            avg_loss.append(im_loss.item())
+            
+        self.logger.record("avg_im_loss", np.mean(avg_im_loss))
\ No newline at end of file
diff --git a/rllte/xplore/reward/ride.py b/rllte/xplore/reward/ride.py
index f58db04..c230dc8 100644
--- a/rllte/xplore/reward/ride.py
+++ b/rllte/xplore/reward/ride.py
@@ -31,6 +31,7 @@ import torch as th
 from torch import nn
 import torch.nn.functional as F
 from torch.utils.data import TensorDataset, DataLoader
+import numpy as np
 
 from rllte.common.prototype import BaseReward
 from .model import ObservationEncoder, InverseDynamicsModel, ForwardDynamicsModel
@@ -242,6 +243,9 @@ class RIDE(BaseReward):
         # create the dataset and loader
         dataset = TensorDataset(obs_tensor, actions_tensor, next_obs_tensor)
         loader = DataLoader(dataset=dataset, batch_size=self.batch_size, shuffle=True)
+        
+        avg_im_loss = []
+        avg_fm_loss = []
         # update the encoder, inverse dynamics model and forward dynamics model
         for _idx, batch_data in enumerate(loader):
             # get the batch data
@@ -273,4 +277,10 @@ class RIDE(BaseReward):
             (im_loss + fm_loss).backward()
             self.encoder_opt.step()
             self.im_opt.step()
-            self.fm_opt.step()
\ No newline at end of file
+            self.fm_opt.step()
+            
+            avg_im_loss.append(im_loss.item())
+            avg_fm_loss.append(fm_loss.item())
+        
+        self.logger.record("avg_im_loss", np.mean(avg_im_loss))
+        self.logger.record("avg_fm_loss", np.mean(avg_fm_loss))
\ No newline at end of file
diff --git a/rllte/xplore/reward/rnd.py b/rllte/xplore/reward/rnd.py
index b60db4f..ffb1dcf 100644
--- a/rllte/xplore/reward/rnd.py
+++ b/rllte/xplore/reward/rnd.py
@@ -30,7 +30,7 @@ import gymnasium as gym
 import torch as th
 import torch.nn.functional as F
 from torch.utils.data import TensorDataset, DataLoader
-
+import numpy as np
 from rllte.common.prototype import BaseReward
 from .model import ObservationEncoder
 
@@ -164,6 +164,8 @@ class RND(BaseReward):
         # create the dataset and loader
         dataset = TensorDataset(obs_tensor)
         loader = DataLoader(dataset=dataset, batch_size=self.batch_size, shuffle=True)
+        
+        avg_loss = []
         # update the predictor
         for _idx, batch_data in enumerate(loader):
             # get the batch data
@@ -187,3 +189,7 @@ class RND(BaseReward):
             # backward and update
             loss.backward()
             self.opt.step()
+            
+            avg_loss.append(loss.item())
+            
+        self.logger.record("avg_loss", np.mean(avg_loss))
diff --git a/src/plot.ipynb b/src/plot.ipynb
index 51a13e2..c5494d6 100644
--- a/src/plot.ipynb
+++ b/src/plot.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 15,
+   "execution_count": 29,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -14,7 +14,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 16,
+   "execution_count": 30,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -41,14 +41,14 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 17,
+   "execution_count": 31,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "[0.045999999999999985]\n"
+      "[816.0790000000001]\n"
      ]
     }
    ],
@@ -72,15 +72,14 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 18,
+   "execution_count": 32,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Key ppo_MyWayHome-v1_extrinsic_obsRMS:False_rewNorm:rms_updateProp:1.0_rff:False has 1 runs of length 443\n",
-      "Key ppo_MyWayHome-v1_icm_obsRMS:False_rewNorm:rms_updateProp:1.0_rff:True has 1 runs of length 413\n"
+      "Key PPO_SuperMarioBros-1-1-v3_extrinsic_obsRMS:False_rewNorm:rms_updateProp:1.0_rff:False has 1 runs of length 157\n"
      ]
     }
    ],
@@ -96,7 +95,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
+   "execution_count": 33,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -120,7 +119,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 20,
+   "execution_count": 34,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -129,12 +128,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": 35,
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 1500x700 with 12 Axes>"
       ]
diff --git a/src/train_ppo.py b/src/train_ppo.py
index b29bbe5..653bc35 100644
--- a/src/train_ppo.py
+++ b/src/train_ppo.py
@@ -63,5 +63,4 @@ if __name__ == "__main__":
     agent.train(
         num_train_steps=args.num_train_steps,
         anneal_lr=args.anneal_lr,
-        #num_eval_episodes=1
     )
\ No newline at end of file
diff --git a/src/utils.py b/src/utils.py
index 18d0692..83c67f1 100644
--- a/src/utils.py
+++ b/src/utils.py
@@ -9,19 +9,19 @@ def parse_args():
 
     # train config
     parser.add_argument("--seed", type=int, default=0)
-    parser.add_argument("--n_envs", type=int, default=16)
+    parser.add_argument("--n_envs", type=int, default=8)
     parser.add_argument("--num_train_steps", type=int, default=10_000_000)
     parser.add_argument("--hidden_dim", type=int, default=512)
     parser.add_argument("--feature_dim", type=int, default=512)
-    parser.add_argument("--num_steps", type=int, default=2048)
-    parser.add_argument("--batch_size", type=int, default=2048)
-    parser.add_argument("--lr", type=float, default=0.0003)
+    parser.add_argument("--num_steps", type=int, default=128)
+    parser.add_argument("--batch_size", type=int, default=256)
+    parser.add_argument("--lr", type=float, default=0.00025)
     parser.add_argument("--eps", type=float, default=1e-5)
-    parser.add_argument("--n_epochs", type=int, default=10)
-    parser.add_argument("--clip_range", type=float, default=0.2)
+    parser.add_argument("--n_epochs", type=int, default=4)
+    parser.add_argument("--clip_range", type=float, default=0.1)
     parser.add_argument("--clip_range_vf", type=float, default=0.1)
     parser.add_argument("--vf_coef", type=float, default=0.5)
-    parser.add_argument("--ent_coef", type=float, default=0.0)
+    parser.add_argument("--ent_coef", type=float, default=0.08)
     parser.add_argument("--max_grad_norm", type=float, default=0.5)
     parser.add_argument("--discount", type=float, default=0.99)
     parser.add_argument("--anneal_lr", action="store_true", default=False)
@@ -49,6 +49,7 @@ def make_env(args, device):
             device=device,
             num_envs=args.n_envs,
             env_id=args.env_id,
+            asynchronous=False
         )
     elif "MyWayHome" in args.env_id:
         from rllte.env import make_envpool_vizdoom_env
